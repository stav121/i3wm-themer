#!/usr/bin/env bash

# NOTE TO ALL DEVELOPERS
# If you are interested in helping to improve this script,
# feel free to make any change you think that is necessary
# and submit a Pull Request on the original repository:
# https://github.com/unix121/i3wm-themes
# Every change is welcome, every contributor will be credited (as should)
#
# General goal of this script is to replace the original version listed under
# "scripts" directory of this repository, named "i3wmthemer". It has to
# replace only the needed lines in each configuration file instead of the
# entire file, to improve functionality, flexibility and help users keep their
# current configuration but changing only what needs to be changed.
#
# Before you start improving it make sure that you have the latest version
# of the script, this script is updated frequently.
#
# Last update: 2 May 2017
#
# Here is a list of the things that
# need addressing :
#
# TODO List:
# 1 - Overwrite only the colors from ~/.extend.Xresources ( or ~/.Xresources)
#     Need to add rofi [DONE] - Nothing new to add (yet).
# 2 - Overwrite only the colors from ~/.i3/config [ DONE] -
# 3 - Overwrite only the shadows and opacity from ~/.config/compton.config [DONE]
# 4 - Overwrite only the needed parts of ~/.config/polybar/config [Almost DONE]
# 5 - Overwrite only the frame/background/foreground of ~/.config/dunst/dunstrc
# 6 - Overwrite only the background/foregrounds/textcolors of ~/.dmenurc [DONE]
# 7 - Overwrite only the colorscheme from ~/.vmric
# 8 - Overwrite only the Icon Pack / GTK Theme from ~/.xsettingsd
# 9 - (Last part after the things above have been addressed) - No more hardcoding
#
# KNOWN ISSUES AT THE MOMENT:
# [EMPTY]
#
# The list above will be updated every time something changes or something new
# needs to be added. Feel free to recommend new features.
#
# Lastly,this script is under development so please take care while using it.

# If you decide to change this script and use it please make sure you credited
# the author(s) and contributor(s) listed below.

# Written by : Stavros Grigoriou (unix121)
# GitHub : https://github.com/unix121
# E-mail : unix121@protonmail.com
# Simple script to apply a theme from the collection.

# Contributors:
#
# Contributor #1: rynnon
# GitHub: https://github.com/rynnon
#
# Contributor #2: ve9u
# Github: https://github.com/ve9u

exec 2> /dev/null

# Printing function
msg(){
  NORMAL="\e[1;0m"
  BOLD="\e[1;1m"
  COLORED="${BOLD}\e[1;32m"
  local option=$1
  local message=$2; shift

  if [ "$option" == "-n" ]
  then
    #Normal information display messages
    printf "\n${COLORED}${BOLD}[*] ${message}${NORMAL}"
  elif [ "$option" ==  "-e" ]
  then
    # Error messages
    printf "\n${COLORED}${BOLD}${message}"
  elif [  "$option" == "-i" ]
  then
    # Subprocess error messages
    printf "\n\t${COLORED}${BOLD}[*] ${message}${NORMAL}"
  elif [ "$option" == "-s" ]
  then
    # Subprocess success messages
    printf "\n\t${COLORED}${BOLD}[+]${NORMAL} ${message}"
  elif [ "$option" == "-f" ]
  then
    # Subprocess failure messages
    printf "\n\t${COLORED}${BOLD}[-]${NORMAL} ${message}"
  elif [ "$option" == "-p" ]
  then
    # Subprocess information message
    printf "\n\t${COLORED}${BOLD}[!] ${message}${NORMAL}"
  elif [ "$option" == "-h" ]
  then
    # Help information messages
    printf "\n${NORMAL}${message}"
  elif [ "$option" == "-c" ]
  then
    # Caution message
    printf "\n${COLORED}${BOLD}[!]${NORMAL} ${message}"
  else
    # Wrong argument given error
    printf "\n${COLORED}${BOLD}Printing error...!{$NORMAL}"
  fi
}

# Exit function
ext(){
  echo
  msg -n "i3wmthemer finished\n\n"
  exit 0
}

# Function to overwrite files based on line numbers.
overwrite(){

  local file1=$1
  local file2=$2
  local replacement=$3

  if local templine=$(cat $file1 | fgrep -w $replacement)
  then
    if [ ! -z "$templine" ]
    then
      if local userline=$(cat $file2 | fgrep -w $replacement)
      then
        if [ ! -z "$userline" ]
        then

          line=$( fgrep -n $replacement $file2 | cut -d':' -f1 )
          #line=$( grep -w $replacement $file2 | cut -d':' -f1 )
          #line=$(awk "/$replacement/{print NR}" $file2)
          replacement=$templine

          if ! sed -i "${line}s/.*/$replacement/" $file2
          then
            msg -f "Failed to apply change: Overwrite "$replacement" ."
          else
            msg -s "Applied change: Overwrite "$replacement" ."
          fi
        else
          msg -f "Failed to apply change: Overwrite "$replacement" ."
        fi
      else
      msg -f "Failed to apply change: Overwrite "$replacement" ."
      fi
    else
      msg -f "Failed to apply change: Overwrite "$replacement" ."
    fi
  else
    msg -f "Failed to apply change: Overwrite "$replacement" ."
  fi

}

# Added as a fast fix on the issue that the script would not
# Replace background and foreground in the polybar configuration
# Needs further improvements.
overwrite_exact(){

  local file1=$1
  local file2=$2
  local replacement=$3

  if local templine=$(cat $file1 | grep -w "^$replacement")
  then
    if [ ! -z "$templine" ]
    then
      if local userline=$(cat $file2 | grep -w "^$replacement")
      then
        if [ ! -z "$userline" ]
        then
          if ! sed -i "s/$userline/$templine/g" $file2
          then
            msg -f "Failed to apply change: Overwrite "$replacement" ."
          else
            msg -s "Applied change: Overwrite "$replacement" ."
          fi
        else
          msg -f "Failed to apply change: Overwrite "$replacement" ."
        fi
      else
      msg -f "Failed to apply change: Overwrite "$replacement" ."
      fi
    else
      msg -f "Failed to apply change: Overwrite "$replacement" ."
    fi
  else
    msg -f "Failed to apply change: Overwrite "$replacement" ."
  fi

}

configure(){
  # This script will add the necessary lines to the configuration
  # Files in order to make those themes work.

  # First add the needed lines in the i3 configuration file.

# <------------------------- i3 configuration -------------------------> #
  if [ -e "..//templates/.i3/config" ]
  then

    msg -i "Located the i3 template file in the template directory."
    i3tempath=../templates/.i3/config

    flag1=0
    if [ -e "$HOME/.i3/config" ]
    then
      flag1=1
      i3path=$HOME/.i3/config
    elif [ -e "$HOME/.config/i3/config" ]
    then
      flag1=1
      i3path=$HOME/.config/i3/config
    fi

    if [ $flag1 -eq 1 ]
    then
      msg -i "Located your i3 configuration file"

      # We add the following lines in the configuration file

      sed -i "1s/^/\n/" $i3path

      d="background_i3wmthemer"
      newline=$( cat $i3tempath | grep $d )
      check=$( cat $i3path | grep "$newline" )
      if [[ -z $check ]]
      then
        if sed -i "1s/^/$newline\n/" $i3path
        then
          msg -s "Copied the line : "$newline" in your configuration file"
        else
          msg -f "Failed to copy the line : "'$newline'" in your configuration file"
        fi
      else
        msg -f "Line "'$newline'" already exists in your i3 configuration file."
      fi

      d="foreground_i3wmthemer"
      newline=$( cat $i3tempath | grep $d )
      check=$( cat $i3path | grep "$newline" )
      if [[ -z "$check" ]]
      then
        if sed -i "1s/^/$newline\n/" $i3path
        then
          msg -s "Copied the line : "$newline" in your configuration file"
        else
          msg -f "Failed to copy the line : "'$newline'" in your configuration file"
        fi
      else
        msg -f "Line "'$newline'" already exists in your i3 configuration file."
      fi

      for i in {0..15}
      do
        # Constructing our strings
        if [ $i -lt 10 ]
        then
          a="color0"
        else
          a="color"
        fi
        d=$a$i
        newline=$( cat $i3tempath | grep $d )
        check=$( cat $i3path | grep "$newline" )

        if [[ -z $check ]]
        then
          if sed -i "1s/^/$newline\n/" $i3path
          then
            msg -s "Copied the line : "'$newline'" in your configuration file"
          else
            msg -f "Failed to copy the line : "'$newline'" in your configuration file"
          fi

        else
          msg -f "Line "'$newline'" already exists in your i3 configuration file."
        fi

      done

    else
      msg -f "Failed to locate your i3 configuration file"
    fi

  else
    # If we are here then we failed to locate the i3 configuration template
    msg -f "Failed to locate the i3 configuration template in template directory"
  fi

  # <-------------------end of i3 configuration ---------------------> #

# < -------------------- Polybar configuration -----------------------> #

  if [ -e "../templates/.config/polybar/config" ]
  then
    msg -i "Located Polybar configuration template in template directory."
    polytempath=..//templates/.config/polybar/config

    flag2=0
    if [ -e "$HOME/.config/polybar/config" ]
    then
      flag2=1
      msg -i "Located your polybar configuration file."
      polypath=$HOME/.config/polybar/config

    else
      msg -f "Failed to locate your Polybar configuration file."
    fi

    if [ $flag2 -eq 1 ]
    then

      # We get the line of [colors] label and write our changes above it.
      line=$( fgrep -n [colors] $polypath | cut -d':' -f1 )
      line=$((line+1))

      sed -i "${line}s/^/\n/" $polypath

      # Now we set everything up
      d="background_i3wmthemer"
      newline=$( cat $polytempath | grep $d )
      check=$( cat $polypath | grep "$newline" )
      if [[ -z $check ]]
      then
        if sed -i "${line}s/^/$newline\n/" $polypath
        then
          msg -s "Copied the line : "$newline" in your configuration file"
        else
          msg -f "Failed to copy the line : "'$newline'" in your configuration file"
        fi
      else
        msg -f "Line "'$newline'" already exists in your polybar configuration file."
      fi

      d="foreground_i3wmthemer"
      newline=$( cat $polytempath | grep $d )
      check=$( cat $polypath | grep "$newline" )
      if [[ -z $check ]]
      then
        if sed -i "${line}s/^/$newline\n/" $polypath
        then
          msg -s "Copied the line : "$newline" in your configuration file"
        else
          msg -f "Failed to copy the line : "'$newline'" in your configuration file"
        fi
      else
        msg -f "Line "'$newline'" already exists in your polybar configuration file."
      fi

      for i in {0..15}
      do
        # Constructing our strings
        if [ $i -lt 10 ]
        then
          a="color0"
        else
          a="color"
        fi
        d=$a$i
        newline=$( cat $polytempath | grep $d )
        check=$( cat $polypath | grep "$newline" )

        if [[ -z $check ]]
        then
          if sed -i "${line}s/^/$newline\n/" $polypath
          then
            msg -s "Copied the line : "'$newline'" in your configuration file"
          else
            msg -f "Failed to copy the line : "'$newline'" in your configuration file"
          fi

        else
          msg -f "Line "'$newline'" already exists in your polybar configuration file."
        fi

      done

    fi



  else
    # If we are here that means that we failed to locate the polybar template.
    msg -s "Failed to locate Polybar configuration template in template directory."
  fi



# <------------------------- End of Polybar configuration -------------------------> #

# end of script, time to exit #

ext

}

# Simple initiation message
echo
msg -n "i3wmthemer script started"
echo

# Check if no arguments were given
if [ $# -eq 0 ]
then
  msg -e "Error: No arguments given"
  msg -e "try: ./i3wmthemer -h for help"
  echo
  ext
fi

OPTION=$1
THEME=$2

if [ "$OPTION" ==  "-t" ]
then
  msg -n "You have entered theming mode."

  if [ -z "$THEME" ]
  then
    msg -e "ERROR: No theme given in arguments"
    ext
  fi

  FLAG=0
  # Locating the theme directory.
  if [ -d "../templated_themes/$THEME" ]
  then
    msg -i "Located the theme directory."

  # < -------------- Copy the fonts into the system --------------->
    if [ -d "../.fonts" ]
    then
      if [ -d "/$HOME/.fonts/" ]
       then
        if cp -R ../.fonts/. ~/.fonts/
        then
          msg -s 'Fonts are set up successfully'
        else
          msg -f 'Failed to copy Fonts into ~/.fonts/ directory'
        fi
      else
        echo '  [*] Could not locate ~/.fonts/ directory, attempting to create it...'
        if mkdir ~/.fonts/
        then
          msg -s '~/.fonts/ directory created successfully'
          if cp -R ../.fonts/. ~/.fonts/
          then
            msg -s 'Fonts migration completed successfully'
          else
            msg -f 'Failed to create ~/.fonts/ directory'
          fi
        fi
      fi
    else
      msg -f '../.fonts/ directory not found'
   fi
# <----------------- End of font setup --------------------------------> #

# <------------- Setup GTK Themes and Icons ---------------------------> #

# Copying the GTK Theme into the right folder

  if [ -d "../templated_themes/$THEME/.themes" ]
  then
    if [ -d "/$HOME/.themes/" ]
    then
      if cp -R  ../templated_themes/$THEME/.themes/. ~/.themes/
      then
        msg -s  'GTK Theme migration completed successfully.'
      else
        msg -f 'Failed to copy GTK Theme into ~/.themes/ directory.'
      fi
    else
      msg -p 'Could not locate ~/.themes/ directory, attempting to create it...'
       if mkdir ~/.themes/
       then
         msg -s '~/.themes/ directory created successfully.'
         if cp -R ../templated_themes/$THEME/.themes/. ~/.themes/
         then
           msg -s 'GTK Theme migration completed successfully.'
         else
           msg -f 'Failed to copy GTK Theme into ~/.themes/ directory'
         fi
       else
         msg -f 'Failed to create ~/.themes/ directory.'
       fi
    fi
  else
    msg -f 'This theme does not have a GTK Theme included.'
  fi

  # Copying the Icons into the right folder
  if [ -d "../templated_themes/$THEME/.icons" ]
  then
    if [ -d "/$HOME/.icons/" ]
    then
      if cp -R ../templated_themes/$THEME/.icons/. ~/.icons/
      then
        msg -s 'Icon migration completed successfully.'
      else
        msg -f 'Failed to copy Icons into ~/.icons/ directory.'
      fi
    else
      msg -p 'Could not locate ~/.icons/ directory, attempting to create it...'
      if mkdir ~/.icons/
      then
        msg -s '~/.icons/ directory created successfully.'
        if cp -R  ../templated_themes/$THEME/.icons/. ~/.icons/
        then
          msg -s 'Icon migration completed successfully.'
        else
          msg -f 'Failed to create ~/.icons/ directory.'
        fi
      fi
    fi
  else
    msg -f 'This theme does not have an Icon pack included.'
  fi


# <------------- End of GTK Themes and Icons Setup --------------------> #

# <-------------------  ~/.Xresources  modification -------------------> #
    # Locating the extend.Xresources files.
    if [ -e "../templated_themes/$THEME/.resources/.extend.Xresources" ]
    then
      # We have found the Resources file from the templated themes.
      msg -i "Located .extend.Xresources file in theme the directory."

      resourcestempfile=../templated_themes/$THEME/.resources/.extend.Xresources
      FLAG=0

      # Locating the user's resources file.
      if [ -e "$HOME/.extend.Xresources" ]
      then
        msg -i "Located ~/.extend.Xresources file."
        resourcesfile=$HOME/.extend.Xresources
        FLAG=1
      elif [ -e "$HOME/.Xresources" ]
      then
        resourcesfile=$HOME/.Xresources
        msg -i "Located ~/.Xresources file."
        FLAG=1
      fi

      if [ $FLAG -eq 1 ]
      then
        # If we are here then we have found the user's resources file
        # and it's time to apply the changes
        overwrite $resourcestempfile $resourcesfile "*.background:"
        overwrite $resourcestempfile $resourcesfile "*.foreground:"
        overwrite $resourcestempfile $resourcesfile "*.cursorColor:"
        overwrite $resourcestempfile $resourcesfile "URxvt.background"
        overwrite $resourcestempfile $resourcesfile "URxvt*foreground"
        overwrite $resourcestempfile $resourcesfile "URxvt*cursorColor"
        overwrite $resourcestempfile $resourcesfile "URxvt.font"

        for i in {0..15}
        do
          # Constructing our strings
          a="*.color"
          b=$a$i
          c=":"
          d=$b$c
          overwrite $resourcestempfile $resourcesfile $d
        done

        #<------- Rofi Customization ------>

        overwrite $resourcestempfile $resourcesfile "rofi.color-enabled"
        overwrite $resourcestempfile $resourcesfile "rofi.color-window"
        overwrite $resourcestempfile $resourcesfile "rofi.color-normal"
        overwrite $resourcestempfile $resourcesfile "rofi.color-active"
        overwrite $resourcestempfile $resourcesfile "rofi.color-urgent"
        overwrite $resourcestempfile $resourcesfile "rofi.font"

        #<--- End of Rofi Customization ---->

        msg -i "Finished editing ~/.extend.Xresources file."

      fi

    else
      msg -f "Failed to locate .extend.Xresources file in the theme directory."
    fi

    # If the flag is "1" that means that changes have been made and we have
    # to run xrdb.
    if [ $FLAG -eq 1 ]
    then
      msg -i "Executing 'xrdb ~/.Xresources' command."
      if xrdb ~/.Xresources
      then
        msg -i "Success!"
      else
        msg -f "Failed to execute command."
      fi
    fi
# <--------------- End of ~/.Xresources  modification ---------------> #

# <------------------- ~/.i3/config  modification -------------------> #

    # Locating the ~/.i3/config file in the theme directory
    if [ -e "../templated_themes/$THEME/.i3/config" ]
    then
      # If we are here then we have located the i3 configuration file
      # in the themplated theme's folder
      msg -s "Located .i3/config file in the theme directory."

      i3tempfile=../templated_themes/$THEME/.i3/config

      FLAG=0

      # Now we locate the user's i3 configuration file
      if [ -e "$HOME/.i3/config" ]
      then
        msg -s "Located ~/.i3/config file."
        i3file=$HOME/.i3/config
        FLAG=1
      elif [ -e "$HOME/.config/i3/config" ]
      then
        msg -s "Located ~/.config/i3/config file."
        i3file=$HOME/.config/i3/config
        FLAG=1
      fi

      if [ $FLAG -eq 1 ]
      then
        # Apply the changes
        overwrite $i3tempfile $i3file "new_window"
        overwrite $i3tempfile $i3file "new_float"
        overwrite $i3tempfile $i3file "new_window"
        overwrite_exact $i3tempfile $i3file "client.background"
        overwrite_exact $i3tempfile $i3file "client.focused"
        overwrite_exact $i3tempfile $i3file "client.unfocused"
        overwrite_exact $i3tempfile $i3file "client.focused_inactive"
        overwrite_exact $i3tempfile $i3file "client.urgent"
        overwrite_exact $i3tempfile $i3file "client.placeholder"

      fi

    else

      # If we are here then we failed to locate the ./i3/config file
      # in the theme directory
      msg -f "Failed to locate i3 configuration file in the theme directory."

    fi


# <--------------- End of ~/.i3/config  modification ----------------> #

# <------------------ Polybar customization -------------------------> #
    if [ -e "../templated_themes/$THEME/.config/polybar/config" ]
    then
      # Located the polybar configuration file in the theme directory
      msg -s "Located .config/polybar/config file in the theme directory."

      if [ -e "/$HOME/.config/polybar/config" ]
      then
        # Located the polybar configuration file in the user's directory
        msg -s "Located ~/.config/polybar/config file."

        polybartempfile=../templated_themes/$THEME/.config/polybar/config
        polybarfile=/$HOME/.config/polybar/config

        # Copying the needed parts of the configuration
        overwrite_exact $polybartempfile $polybarfile "bottom"
        overwrite_exact $polybartempfile $polybarfile "height"
        overwrite_exact $polybartempfile $polybarfile "width"
        overwrite_exact $polybartempfile $polybarfile "offset-x"
        overwrite_exact $polybartempfile $polybarfile "offset-y"
        overwrite_exact $polybartempfile $polybarfile "fixed-center"
        #overwrite_exact $polybartempfile $polybarfile "font-0"
        #overwrite_exact $polybartempfile $polybarfile "font-1"
        #overwrite_exact $polybartempfile $polybarfile "font-2"
        #overwrite_exact $polybartempfile $polybarfile "font-3"
        overwrite_exact $polybartempfile $polybarfile "line-size"
        overwrite_exact $polybartempfile $polybarfile "line-color"
        overwrite_exact $polybartempfile $polybarfile "border-size"
        overwrite_exact $polybartempfile $polybarfile "border-color"
        overwrite_exact $polybartempfile $polybarfile "padding-left"
        overwrite_exact $polybartempfile $polybarfile "padding-right"
        overwrite_exact $polybartempfile $polybarfile "module-margin-left"
        overwrite_exact $polybartempfile $polybarfile "module-margin-right"
        #overwrite_exact $polybartempfile $polybarfile "modules-right"
        #overwrite_exact $polybartempfile $polybarfile "modules-center"
        #overwrite_exact $polybartempfile $polybarfile "modules-left"
        overwrite_exact $polybartempfile $polybarfile "tray-position"
        overwrite_exact $polybartempfile $polybarfile "tray-padding"
        overwrite_exact $polybartempfile $polybarfile "tray-transparent"
        overwrite_exact $polybartempfile $polybarfile "tray-offset-x"
        overwrite_exact $polybartempfile $polybarfile "tray-offset-y"
        overwrite_exact $polybartempfile $polybarfile "tray-maxsize"
        overwrite_exact $polybartempfile $polybarfile "tray-detached"
        overwrite_exact $polybartempfile $polybarfile "tray-background"
        overwrite_exact $polybartempfile $polybarfile "wm-restack"
        overwrite_exact $polybartempfile $polybarfile "background"
        overwrite_exact $polybartempfile $polybarfile "foreground"
        overwrite       $polybartempfile $polybarfile "override-redirect"
        overwrite_exact $polybartempfile $polybarfile "label-unfocused-background"
        overwrite_exact $polybartempfile $polybarfile "label-unfocused-foreground"
        overwrite_exact $polybartempfile $polybarfile "label-unfocused-underline"
        overwrite_exact $polybartempfile $polybarfile "label-focused-background"
        overwrite_exact $polybartempfile $polybarfile "label-focused-foreground"
        overwrite_exact $polybartempfile $polybarfile "label-focused-underline"
        overwrite_exact $polybartempfile $polybarfile "label-mode-background"
        overwrite_exact $polybartempfile $polybarfile "label-visible-background"
        overwrite_exact $polybartempfile $polybarfile "label-visible-foreground"
        overwrite_exact $polybartempfile $polybarfile "label-visible-underline"
        overwrite_exact $polybartempfile $polybarfile "label-urgent-background"
        overwrite_exact $polybartempfile $polybarfile "label-urgent-foreground"
        overwrite_exact $polybartempfile $polybarfile "label-urgent-underline"
        overwrite_exact $polybartempfile $polybarfile "line-size"
        overwrite_exact $polybartempfile $polybarfile "line-color"
        overwrite_exact $polybartempfile $polybarfile "border-size"
        overwrite_exact $polybartempfile $polybarfile "border-color"

      else
        # Failed to located user's polybar configuration file.
        msg -f "Failed to locate ~/.config/polybar/config in your configuration"
      fi


    else
      # If we are here that means that we failed to locate /.config/polybar/config
      # in the theme directory. (Possibly bad indexing in the theme directory)
      msg -f "Failed to locate polybar configuration file in the theme directory"
    fi


# <--------------- End of Polybar customization ---------------------> #

# <--------------------- dmenu customization ------------------------> #

  if [ -e "../templated_themes/$THEME/Other/.dmenurc" ]
  then
    # Located the polybar configuration file in the theme directory
    msg -s "Located .config/polybar/config file in the theme directory."

    if [ -e "/$HOME/.dmenurc" ]
    then
      msg -s "Located ~/.dmenurc file."


      dmenutempfile=../templated_themes/$THEME/Other/.dmenurc
      dmenufile=/$HOME/.dmenurc

      overwrite $dmenutempfile $dmenufile "DMENU_NF="
      overwrite $dmenutempfile $dmenufile "DMENU_FN="
      overwrite $dmenutempfile $dmenufile "DMENU_SB="
      overwrite $dmenutempfile $dmenufile "DMENU_NB="
      overwrite $dmenutempfile $dmenufile "DMENU_SF="

    else
      # Failed to locate dmenurc in user's directory
      msg -f "Failed to locate ~/.dmenurc in your configuration"
    fi

  else
    # Failed to locate the dmeny configuration file in theme directory
    msg -f "Failed to locate dmenu configuration file in the theme directory"
  fi

# <---------------- end of dmenu customization ----------------------> #

# <------------------- Compton configuration ------------------------> #

  if [ -e "../templated_themes/$THEME/.config/compton.conf" ]
  then
    # Located the compton configuration file in the theme directory
    msg -s "Located .config/compton.config file in the theme directory."

    if [ -e "/$HOME/.config/compton.conf" ]
    then
      # Located user's compton configuration file in user's directory
      msg -s "Located ~/.config/compton.conf file."


      comptontempfile=../templated_themes/$THEME/.config/compton.conf
      comptonfile=/$HOME/.config/compton.conf

      overwrite $comptontempfile $comptonfile "shadow-radius"
      overwrite $comptontempfile $comptonfile "shadow-offset-x"
      overwrite $comptontempfile $comptonfile "shadow-offset-y"
      overwrite $comptontempfile $comptonfile "shadow-opacity"
      overwrite $comptontempfile $comptonfile "no-dock-shadow"

    else
      # Failed to locate compton configuration file in user's directory
      msg -f "Failed to locate ~/.config/compton.conf in your configuration"
    fi

  else
    # Failed to locate the compton configuration file in theme directory
    msg -f "Failed to locate compton configuration file in the theme directory"
  fi


# <--------------- end of compton configuration ---------------------> #

# <----------------- Change the background using nitrogen ------------> #
    if  nitrogen --set-scaled ../templated_themes/$THEME/$THEME.png
    then
      msg -s 'Wallpaper set successfully'
    else
      msg -f 'Could not set wallpaper (Nitrogen missing?)'
    fi
 # <---------------- End of background change -----------------------> #

# <-------- Last part, now we restart i3wm to apply changes----------> #
    msg -i "Restarting i3wm..."
    if ! i3-msg restart
    then
      msg -i "Success!"
    else
      msg -f "Failed to restart i3wm."
    fi

    msg -c "Almost done, please use your appearance manager to set the wallpaper and GTK/Icon themes"

  else

    # In that case we failed to locate the theme directory, that means
    # probably bad pathing in the theme directory.
    msg -f "Failed to locate theme directory."
    ext
  fi

elif [ "$OPTION" == "-b" ]
then
  # Simple backup mode, copy all the files that are changes from the themer
  # in case the user wants to come back to an old configuration.
  msg -n "You have entered backup mode."

  # Backup mode. We locate the ../Backups/ directory
  # If it exists then we write into it, otherwise
  # we create it.
  msg -n "Backing up your files"

  if [ -d "../backups" ]
  then
    msg -s "Located backup directory"
  else
    mkdir ../backups
    msg -s  "Created backup directory"
  fi

#<------------------------- BACKUP ------------------------->

  if [ -z "$THEME" ]
  then
    msg -e 'Error: No backup name given'
    msg -e 'try: ./i3wmthemer -h for help'
    ext
  fi

  if mkdir ../backups/$THEME
    then
    msg -s 'Folder created successfully'
  else
    msg -f 'Error, folder might already exist'
    ext
  fi

  mkdir ../backups/$THEME/.resources/

  if cp ~/.Xresources ../backups/$THEME/.resources/.Xresources
    then
    msg -s 'Saved ~/.Xresources successfully'
  else
    msg -f 'Failed to save ~/.Xresources'
  fi

  if cp ~/.extend.Xresources ../backups/$THEME/.resources/.extend.Xresources
    then
    msg -s 'Saved ~/.extend.Xresources successfully'
  else
    msg -f 'Failed to save ~/.extend.Xresources'
  fi

  mkdir ../backups/$THEME/.config/
  mkdir ../backups/$THEME/.config/polybar/

  if cp ~/.config/polybar/config ../backups/$THEME/.config/polybar/config
  then
    msg -s 'Saved ~/.config/polybar/config successfully'
  else
    msg -f 'Failed to save ~/.config/polybar/config'
  fi

  if cp ~/.config/polybar/launch.sh ../backups/$THEME/.config/polybar/launch.sh
  then
    msg -s 'Saved ~/.config/polybar/launch.sh successfully'
  else
    msg -f 'Failed to save ~/.config/polybar/config'
  fi

  if cp ~/.config/compton.conf ../backups/$THEME/.config/compton.conf
    then
    msg -s 'Saved ~/.config/compton.conf successfully'
  else
    msg -f 'Failed to save ~/.config/compton.conf'
  fi

  mkdir ../backups/$THEME/.i3/

  if cp ~/.i3/config ../backups/$THEME/.i3/config
    then
    msg -s 'Saved ~/.i3/config successfully'
  else
    msg -f 'Failed to save ~/.i3/config'
  fi

  mkdir ../backups/$THEME/Other/

  if cp ~/.dmenurc ../backups/$THEME/Other/.dmenurc
    then
    msg -s 'Saved ~/.dmenurc successfully'
  else
    msg -f 'Failed to save ~/.dmenurc'
  fi

  if cp ~/.vimrc ../backups/$THEME/Other/.vimrc
    then
    msg -s 'Saved ~/.vimrc successfully'
  else
    msg -f 'Failed to save ~/.vimrc'
  fi

  mkdir ../backups/$THEME/.config/dunst/

  if cp ~/.config/dunst/dunstrc ../backups/$THEME/.config/dunst/dunstrc
  then
    msg -s 'Saved ~/.config/dunst/dunstrc successfully'
  else
    msg -f 'Failed to save ~/.config/dunst/dunstrc'
  fi

  if cp ~/.xsettingsd ../backups/$THEME/.xsettingsd
  then
    msg -s 'Saved ~/.xsettingsd successfully'
  else
    msg -f 'Faled to save ~/.xsettingsd'
  fi

  msg -c "Your backup theme is now saved under ../backups/ directory\n"

  ext
#<------------------------END OF BACKUP -------------------->


elif [ "$OPTION" == "-c" ]
then
  # Modification mode #
  msg -n "You have entered configuration mode."
  msg -n "i3wmthemer will try to configure your dotfiles to prepare them to apply the themes"

  # Run the configuration script
  configure

elif [ "$OPTION" == "-h" ]
then
  # Simple help prompt.
  # Remember to update this every time something changes in the way
  # That we call the script.
  msg -h "-c                           -> Configure files, must be run as first"
  msg -h "                                command the first time you ever run the"
  msg -h "                                script."
  msg -h "-t {THEME}                   ->  Set a theme."
  msg -h "        Example use: ./i3wmthemer -t ThemeX"
  msg -h "-b {BACKUP_NAME}             ->  Create a backup of your files under"
  msg -h "                                  ../Backups/ directory."
  msg -h "        Example use: ./i3wmthemer -b Backup123"
  msg -h "-t Backups/{BACKUP_NAME}    -> Restore a backup."
  msg -h "        Example use: ./i3wmthemer -t Backups/Backup123"

else
  # No valid option given while starting the themer.
  msg -e "ERROR: No valid argument given"

fi

# Finished, time to call the exit function to leave the program.
ext
